package otel

import (
	"bytes"
	"context"
	"fmt"
	"github.com/stretchr/testify/assert"
	"go.opentelemetry.io/otel/exporters/stdout/stdouttrace"
	tracesdk "go.opentelemetry.io/otel/sdk/trace"
	"testing"
)

const PROT_16_1 string = "[1, \"NR_LAMBDA_MONITORING\", \"H4sIAAgSnl4AA6VX2XLiyBJ9v1+hIOahe+xGKu3y3L4R7PuOAdszQZREIQm0IZUw4PC/3ywBbuh2e3piImzLysqqzDp5ctFLzicULzDFuTvuJYfjAJ7scYefkzsP++YC36XJF4IT+gXdyaqkKpoh6bqh3y3TwKJuGNyt8Nb1zS+UgM6CWGGMaRjnbrlcFIc0tEJvviVxAppwNlJBft55Ic/91i6MK6Mx24ajBdnNKUiFvALvZEesNNMnwdaNw8AnAVvNFaajeTvzcR7tqRMGUl7NDrBB4fJwOS/mhTwShNwrLL9dF+4eu9b89P4UpJ53yyFF0gxB0HQpL6myqOsXIhlESiZ6enrJBdgn7PR+ZpufjmoNvpfSKKV8cQ9oMFcSK4wyJWb5Cd1y4sWP/NdfIPx2UJ3SqOwmEaaWQ+J3t0uZ9R//IkFHgiHDiezMHA6wt6dwN7JlUFzf8CUXk4TE29CN54l7YOcDNILAoGbqyTwhhOGmvx4vyrabOCEl7HmlMM3ARycgmbycQsiPUIt5EWmiIWq6osqyIiGRfBFYEBffdFgkdFXXdQlJoiHJigbrduou2EVFeSFoyEAqQUtBIIShcMZnSsxxjIMEZ+zhqyca8fO5j91gPr9zA2BOxrwwZk7qgoAyHrph7NI9cztvaDqTJdiPPMJM0jglIKCuDwQGKdNiAdclTVNkg8FCQ4q9sZt58a73NMYWafz0AnR/jOKF9yygL6/HYGxSsJwHNjphdkStkuXBeSGNXSblj7IkCoOE5B2CF0DwvBUGFGLWJoFNHeY6+kBrfPKDkh3lHep7f3CWg+OE0K8pXX7RrywAGDRNsiuxxDkSy0oTGvo/odU1e06OfEc0OOvEqu8A1xWkqJKsadoFYKXMXIWdmwGWW4Yhk5s4PntE4jiM/4VDb/5cMVQQdEUWwC1FkGSkGapxNpW3PJxksJip61E3SO4m2EtJhS3m3rTgbgnUIabHfL5guK4YBhYNghWkGspikTE8ztNv3Kh9oPkBsyGFFfUXqM2Q1mRJlKVr5r5n7sKr7q9mITkj8Q7tjyj9wP0zT7FlkYheUfQWR5HnWllo+B2T3Oy+lwKRN1+FvHHr+oA5/0zM6PQvjgL79nf+92xdv8yqs0knTDKDXmhhj73cMWzf00yBOgX71Hs64cH1PMwreYH71MGWG9Awcf7gGpBoHgcCrjfiZkCvOZLm6meuAP4SgK7lUh6qCzQS7lOrPu60bznPXROuRqx1+JkrOXHoE141oF9JsqGxpsWN8BLH7mnbpWd/WzLeQvG3dUM0/lHh+EmlUKBSwMpzYrv5MGuFeTNrhWcDlyuAt5fk9y7xFqfsvFxNYJIIFskpGwUFGYKkibKqCTISkHrKfmiWwb9K/nP2A5WIHcYsk3IQYwKDQe7HtqUiVddk1ZB1URaRcZHVS1PRVFFYLHUL61iQL/vWB40KEh+8jPf90M14dcrY644F9xV/qWVlYwtMLdd5LcuqtRQFVV4YElrK5Lu8/kDpFPURgPyWs2fgN948s/GG+9NTrkdhbvm4OAA/AWQ4AH5FyZABNEM0ZENWZFVXYJLJjSrtSmnMRfY88QiJPgHun9mGMtiBbhATHmaiY1T4PuSrDWHlE+IRi4IaYrOQmJclBSFkGAY8NPHXZTnS3NP1GsWFVWXgbI3WvuIVDy152ag22pGJDbfl3I+8SrMzpsg21uux2UpGNx6vqasBWne2OysdPFY1n4w7h7o0iJWyojYeKr0JP1ZI2b1ZVx6dwX5Amk2nEXVLGBerriU4plGtRo1asoHir5E1MoelpNzsicgtt9dRXHzckLo41Mm0MNvZso2Eib0q7zw8LU4euofu/Y7KuF1fqA+2tSlPokYzMlbD50QzBX+gu3GJl0vjRUVd7XGhDBTRRuubvVGs8rwk7FJtrD7D8L2rDmpySZsKJl0qZbJZDmaFwvQeyzU3Nh/cTjroSuvepriy1c7GbvK15Soo67uC4si9VtDtdl29XcS40tmJzvNw8ihsg93Dttl+VGpqC5vP20ZzoFZoa5CWa6uoKay1sVnz6o7pTKqtVjSrLpsDQZ3isjJr3AujmjE+xAd9WlDJcKMf+oXgsI0bwYOtUEWNy4WZMYsBUWKItWrddjaN511TrA/KN3yhryNtOviau5wQrsvD09OxEaqapuZZOrOp4xfoyx4n9v6k/78cPz8KFL4tzPRY+1ji5CDBY9B2rUzyVjishbQQsQnDIhQQDQm579MfSbL4flu/mkqhlInZQApU1nRRFNVsGLioA+9ZApei+U8cef3WUObHhnLELgc1x1ofs58hyvq7RUyQcZ98SEguJhYgwLH6zsGwRD/fMVNV1yPcn/B1F+Wj/Z851vcCAkl4y7kB918/XKQe+d+FIjvQjuFzYzGHxF9fb5KyXc8xnHb8Unr/dDVTy4LGmJB18OvAnMrZRT2cH4H+GWEAVgPpedmA6g+lSUZIZh8LuqgjUflHJDqhSZo7NBZQ7JQLA35kHMor87FWTA1j0g5HoxUZVppTWXqwh4lXx5MA+g+ibXGqdcrlss8vybbnac3Yvo9bUWUy7j569Uk33tJhfySE4eA+ro22ysNe8kZma9zoQxV1kF65kXfi1vGXPYJK0qaTtjd15WZ4U9zcT1f3aqT4q8ciFDBc7RcWas9X+rPi/YBi97mGazdd3RoV0ul4q9PNrl49iKpd60xnpXrf1xvNWlTsrBqHfqKOrOCGNAsPNXnoC9qss3PGI99wZ6hpqMNiW0kQGXpGxx6IK3Vbvymsu62DO7H9xSEWlgd9Y+hNtbDdJdPA7/UW94dhHRX2/kN/tzSL/N7RO7N991FtFb5+ZQzQkWIhabnUBUkylwv0hvASewk5v7C/EPLX1//8H8hANSz8EAAA\"]"
const PROT_16_2 string = "[2, \"NR_LAMBDA_MONITORING\", {\"arn\":\"arn:aws:lambda:us-east-1:463657938898:function:javimb-test-decorator\",\"protocol_version\":16,\"metadata_version\":2,\"execution_environment\":\"AWS_Lambda_python3.6\",\"agent_version\":\"4.2.0.100\",\"agent_language\":\"python\"}, \"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\"]"
const GO_AGENT string = "[2,\"NR_LAMBDA_MONITORING\",\n  {\"metadata_version\":2,\"arn\":\"arn:aws:lambda:us-east-1:123456789012:function:my-function\",\"protocol_version\":17,\"function_version\":\"$LATEST\",\"agent_version\":\"2.2.0.lambda-beta\",\"agent_language\":\"go\"},\"H4sIAAAAAAAA/9xYW2/bOBP9K/nmqRdVFHWzpbdv0263wGJ3gbb7YhgGI41lIhSpklQcr+H/vqAsx3Iap24b7y0XiOCInMMzM5xjr4FJJlaWFzO8QWlnJbMM8gmAtwaNBvWN4npm+B8IOQ2CIPCge9HMDKKEnG68yWQNdtUg5PBBM2lYYbmS4IFktZv81S5QDyzkrSLggeU1GsvqBnLqJ/FolCZhlmZBECcpvgwyD1BrpSG3ukUPylazbt888IMwTMcpTSMP8NailkxcMiEuVSst5HQ/+/pwUZyOKB17ULW8hBzGUZiMsjQr5/NyTuelA6VZge+OGBvNleZ25QCHSRKEsQeG1Y3Acoty462hNah/xhsUkEOlRAluki2NL1h9VTK/UKJ8b5m2u4M5m8ZPLRrbOQ5oGMVJOhpn4A0XMi0hh09L1HYlmCxhM51Oe5IGYZtMDtlMKMWXNPSOhUG5n8Z4F3bBzcWSmQsmL7pN/wcevOhGxu8e763msnKZwSqU9v/Wan7VWjSQr7/9GN4j7Gy8js9DTw8wDFw6bIYX3Rvniy8Yy4rrWbcN5JM1zLnAhtkF5EA+GtSGaHalhJpzRl6roq1drZBKGdvO58ToglTcLtorv1A1kbjUKHhBKvWqo5TMuLRYbZPWEKm3tBC87WCQmnHpV2pfW93EgslSoAYPBJcIeRy6nBsia40mQhVMkEsUgmlSKUJ9Sv2QCH6Ft1h00HQrXVUSZuoZq8s09s3eVW/0CyZEFN45S8Jv9oZzgYUlN0y0eHCq3uL/3lmcw/3Z4tGZ3V0O3UXB+L6780WZLU0fygN4O7svcflTb5+3sqB3KGmS/nNQbh87oO/kjbrGO6Rh9NcBfRTlsxdLzZoGyx7o8/tIM/rdSNnSuP9XW5evKkV6ZC56DuwBtDtgP/bWzyAl2bnrOo0Hdf1ZqP7bdX2iO4mW6KYgThrdSy7dFP6zF87AC3x+eL5oHJ8zeJXCW273F0IURZvpUCCcpO5O1XZvOmHWb+0XghkD+cNaoX+nRmNY5bZ5XG8cFYWdjHGi0O5h/PKovvzXC8anV1NdPtRoNS8GqUDveB4OXeT7JHvTk7OTIdvLTQjYeBPqDYk6cRwESRCPRjTKaBgmWRhPp97e3S4GP6xcjFCTj/JaqqU8+mRCdDkwwNNH+8SxS684TWmW0TQNk3ScHQDq0t18DZweye73O3cbHu7hLXcBOl9Qhi7uk/2kfjp2yIM1fQoD91PUA1Oo5ug1cZ5DfMHVMPFCmgVx8h3J+Zmvwxx4Ul/fUpnnLcrTiu14EbkL0TRMnvjtx70GGR40yPcNk1/qCH0jiUs2wijCMqZxEYYIB33t2OKD1vFwdxn2z2H7PNoOH/+OpmAWK6VXrjWhRM0LJz20j9Lq1W+Ky7vP6Wv31zH/9WzgVRQHWYiUpnM6j91ny4ZplNvW9/dztVMBX75rBnwtrG3A6x5+q0U/k5Phqp29RrtQ7iBv33yAbUL611y6mUJwlE7YFapulHTjfu8d59Pp5k8AAAD//wEAAP//VXsyksYTAAA=\"]"
const GO_AGENT_2 string = "[2,\"NR_LAMBDA_MONITORING\",{\"metadata_version\":2,\"arn\":\"arn:aws:lambda:us-east-1:466768951184:function:newrelic-example-go\",\"protocol_version\":17,\"agent_version\":\"3.9.0\",\"agent_language\":\"go\"},\"H4sIAAAAAAAA/8xWTa/iNhT9K9VdO2CHfDjetdNq1EXVSu+1G4TQJb4wVhM7tZ2hPMR/rxKYlkeZGagYTVcxduJzfLg+5+4BLTa7aOolvScblxojgpoDsD14CuTfO+OXwbwQKME55wzGF8MyEFlQ4sDm8z3EXUeg4NmjDVhH4ywwsNgOkz/Hd+TPVqZv3dTS1lNj6oT+xLZrKNk4YBBNSyFi24ESRSbSXJYyzVLBgLx3HtQam0AMdO9xxFB8wgXP0hmvGEQXsXk2A+b59KY3GhRwXUqSVVlpXRcVLwY4jzX9eG2x0DyX+TqXeZHyIiNg0HnjvIk7UGIiMsllwSCM3DWo6Hs6sD3UfYiu/TZGb1Z9HA5/MfMbNj3B8Cpuw8TTHz2FOFKQQteypiqRSDLJ6lWaIIk6Scsyz6VOhZYc2PhZg+1K4wS9BQXorcJtUMdJ1YeEMMREqKwoykJWuRAyU+vejtqr68Kf7Vq7Rj9F9PF0qsViwU6neEiJ/LR7634Ylj/xfw/6vJgOFLxgN6h1ZNFS9KY+w//no/PhAHYqvTcj7+nx8USbdsA9sLlgY4WIUohZceuYc8FnWZ5yXuYznlUFF4sF+wwYg1C77p5r8KXo3Y9/vED81Y9XwwFSFhmXPB+uRFVV8tOQ2DRfcv/nvx3gXyA3DP8z2s1KPoDE9yfr+273BpuG/PRX+7t1W/vR51XJvxKRUcHHsRk8IXRob/SlC1tKX9nSU4f23kg4JQumWGU5rQusdIlVNoQFerJHX68KMcslibXWYjVLZ0eQDzV0FQoukuV6+Hw8LC/i8WQRn7GpGiNtnN+Bgg1Z8qYeY2rjiaKxG1DwjprGsW+2zjf6aMrsIfp9fYVOncLd/coVzRhYPyEb/e4XZ2z8QO/sQJO7/fjuvuJ6lLP/U88xJPrhLwAAAP//AQAA///h3Y42fgoAAA==\"]"

func TestOtelTelemetrySender_SendTelemetry(t *testing.T) {
	var buf bytes.Buffer
	exporter, err := stdouttrace.New(stdouttrace.WithPrettyPrint(), stdouttrace.WithWriter(&buf))
	assert.NoError(t, err)

	sender := OtelTelemetrySender{traceProvider: tracesdk.NewTracerProvider(tracesdk.WithSyncer(exporter))}
	ctx := context.Background()

	err, count := sender.SendTelemetry(
		ctx,
		"test",
		[][]byte{
			[]byte(PROT_16_1),
			[]byte(PROT_16_2),
			[]byte(GO_AGENT),
			[]byte(GO_AGENT_2),
		},
	)

	assert.NoError(t, err)
	assert.Equal(t, 4, count)

	fmt.Println(buf.String())
}
